
; This builds a compiler/assembler for the commandline
; Coldfire version

shell\ahcccf_t.ttp

.C [-Isinclude]

; configuration
.C [-DBIP_CC=0 -DBIP_ASM=1 -DBIP_LD=0]
.C [-DC99=0]			; Preliminary C99 support.
.C [-DLL=0]				; implement long long (not finished yet :-)
.C [-DFOR_A=0]			; Algol64 syntax
.C [-DFLOAT=1]			; floating point support
.C [-DCOLDFIRE=1]		; Coldfire v4e support
.C [-DROTOP=0]			; <> >< (rol,ror) ROTate OPerators, else __ROL__ and __ROR__

; debugging
.C [-DCC_LEAK=0]	; report memory leaks (ahcm)
.C [-DLOST_NODES=0]
.C [-DOPTBUG=0 -DPCNT_SAMPLE=0]
.C [-DDEBUG=0]			; shell/editor/prj debugging
.C [-DC_DEBUG=0]		; comp/asm/ld debugging
.C [-DWAIT=0]			; wait after error, warning, message or console
.C [-DPRLN=0]			; #pragma prln (a option because it calls print_node)
.C [-DDBGFR=0]			; Debug freeing free nodes (ptrs & const's)
.C [-DDBGLN=0]			; Signal lost nodes

.C [-27 -8]

.C [-A- -Y- -H- -K-]
.C [-C -M -P]
.C [-W-par -W-stv -W-sig -W-cln]	; warning level must be 2 !!
.L [-S=32768]			; loads of recursion in compiler, but also multiple search (2 132 byte strings)
=
ahcstart.o

; compiler
ahcc\init_cc.c			; initialize variables
ahcc\ahcc.c				; compiler's main
ahcc\ttp_io.c			; io

; compiler's body
ahcc\cc_load.c
ahcc\c_lex.c		(ahcc\c_lex.h)
ahcc\tok.c			(ahcc\c_lex.h, ahcc\tok_do.h)
ahcc\cache.c		(ahcc\peepstat.h)
ahcc\pre.c			(ahcc\c_lex.h)
ahcc\body.c			;(ahcc\loc_proc.h,ahcc\a_clause.h,ahcc\a_stmts.h)
ahcc\decl.c
ahcc\d2.c			;(ahcc\for_a_in.h)
ahcc\expr.c
ahcc\e2.c			;(ahcc\a_expr.h)
ahcc\gen.c			(ahcc\save_con.h)
ahcc\g2.c			(ahcc\code.h)
ahcc\gsub.c
ahcc\md.c
ahcc\nodes.c
ahcc\cmpl.s
ahcc\out.c
ahcc\d80tod64.s
;ahcc\ll.s

; optimizer
ahcc\opt.c			(ahcc\optimize.h,ahcc\po_defs.h,ahcc\opt.h)
ahcc\inst.c			(ahcc\optimize.h,ahcc\po_defs.h,ahcc\opt.h)
ahcc\branch.c		(ahcc\optimize.h,ahcc\po_defs.h,ahcc\opt.h)
ahcc\reg.c			(ahcc\optimize.h,ahcc\po_defs.h,ahcc\opt.h)
ahcc\health.c		(ahcc\optimize.h,ahcc\po_defs.h,ahcc\opt.h)
ahcc\peep0.c		(ahcc\optimize.h,ahcc\po_defs.h,ahcc\opt.h)
ahcc\peep1.c		(ahcc\optimize.h,ahcc\po_defs.h,ahcc\opt.h)
ahcc\peep2.c		(ahcc\optimize.h,ahcc\po_defs.h,ahcc\opt.h)
ahcc\peep3.c		(ahcc\optimize.h,ahcc\po_defs.h,ahcc\opt.h,ahcc\p3_4.h)

; assembler
ahcc\as.c			(ahcc\po.h,ahcc\as.h,ahcc\as_defs.h)	; Motorola assembler          GEN_PO=1 BIP_ASM=1
ahcc\as_parse.c		(ahcc\po.h,ahcc\as.h,ahcc\as_defs.h)	; parse Motorola assembler    GEN_PO=1 BIP_ASM=1
ahcc\as_plib.c		(ahcc\po.h,ahcc\as.h,ahcc\as_defs.h)	; parse routines for as_parse          BIP_ASM=1
ahcc\po.c			(ahcc\po.h,ahcc\as.h,ahcc\as_defs.h)	; Pure C object output        GEN_PO=1
ahcc\as_out.c		(ahcc\po.h,ahcc\as.h,ahcc\as_defs.h)	; assembler output            GEN_PO=1 BIP_ASM=1
ahcc\as_lib.c		(ahcc\po.h,ahcc\as.h,ahcc\as_defs.h)	; common of po.c & as_out.c	  GEN_PO=1
ahcc\plib.c			(ahcc\po.h,ahcc\as_defs.h)				; common of po.c & ld.c

common\hierarch.c	; hierarchic name manipulation
common\dict.c		; dictionary

ahcc\ctype.c
ahcc\diagpr.c
ahcc\list.c													; Generic list routines

common\qmem.c			; quick permanent malloc's
common\amem.c			; specials
common\aaaa_lib.c		; for get_cookie() & pluralis()

ahccstdf.lib
ahccgemf.lib
