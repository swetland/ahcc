
; This project builds a full AHCCCF (Coldfire compatable program)

shell\ahcccf.prg

.C [-Isinclude]

; configuration
.C [-DRSRC_H="shell/ahcc.h" -DRSRC_RSC="ahcc.rsc"]
.C [-DPRGNAME="AHCCCF"]

.C [-DGEMSHELL=1]

.C [-DC99=0]			; Preliminary C99 support.
.C [-DBIP_CC=1 -DBIP_LD=1 -DBIP_ASM=1]
.C [-DFU_TREE=1]
.C [-DFOR_A=0]			; Algol64 syntax
.C [-DLL=0]			; allow long long (not finished yet :-)
.C [-DFLOAT=1]			; floating point support
.C [-DCOLDFIRE=1]		; Coldfire v4e support
.C [-DQUAL=1]

.C [-DROTOP=0]			; <> >< (rol,ror) ROTate OPerators, else __ROL__ and __ROR__

; debugging
.C [-DAA_LEAK=0 -DCC_LEAK=1]	; report memory leaks (ahcm)
.C [-DLOST_NODES=0]
.C [-DOPTBUG=0 -DPCNT_SAMPLE=0]
.C [-DDEBUG=0]			; shell/editor/prj debugging
.C [-DC_DEBUG=0]		; comp/asm/ld debugging
.C [-DWAIT=0]			; wait after error, warning or message or journal
.C [-DPRLN=0]			; #pragma prln (a option because it calls print_node)
.C [-DDBGFR=0]			; Debug freeing free nodes (ptrs & const's)
.C [-DDBGLN=0]			; Signal lost nodes

.C [-27 -8]

.C [-A- -Y- -H- -K-]
.C [-C -M -P]

.L [-S=32768]			; loads of recursion in compiler, but also multiple search (2 132 byte strings)
=
ahcstart.o

aaaa.c					; main

text\text.c
text\cursor.c
text\editor.c		(text\fkeytxt.h)
text\text_cfg.c
text\text_sel.c

common\cursor.c
common\files.c
common\kit.c
common\treeview.c	(common\treeview.h)
common\hierarch.c		; hierarchic name manipulation
common\options.c
common\windows.c
common\wdial.c			; window dialogue handling
common\journal.c
common\F_x.c	(common\F_x.h)
common\msgbuf.c
common\stm.c			; chain manager
common\config.c
common\qpfiprep.c
common\qpfind.s
common\parent.s
common\scr_inst.c
common\nkcc_c.c
common\aaaankcc.s		; for the real nkc_tconv
common\win_menu.c
common\aaaa_lib.c
common\dict.c
common\ipff.c
common\pdb.c

shell\gemshell.c	(shell\shell.h)						; GEM shell
shell\shell.c		(shell\shell.h,ahcc\peepstat.h)		; shell's make
shell\shlcfg.c		(shell\shell.h)
shell\tos_call.s		; passes parameters argc & argv to module
						; in stead of program
shell\bip_io.c
; shell\fs.c			; test treeview

; compiler
ahcc\init_cc.c			; initialize variables
ahcc\ahcc.c				; compiler's main

; compiler's body
ahcc\cc_load.c
ahcc\c_lex.c		(ahcc\c_lex.h)
ahcc\tok.c			(ahcc\c_lex.h, ahcc\tok_do.h)
ahcc\cache.c		(ahcc\peepstat.h)
ahcc\pre.c			(ahcc\c_lex.h)
ahcc\body.c			;(ahcc\loc_proc.h,ahcc\a_clause.h,ahcc\a_stmts.h)
ahcc\decl.c
ahcc\d2.c			;(ahcc\for_a_in.h)
ahcc\expr.c
ahcc\e2.c			;(ahcc\a_expr.h)
ahcc\gen.c			(ahcc\save_con.h)
ahcc\g2.c			(ahcc\code.h)
ahcc\gsub.c
ahcc\md.c
ahcc\nodes.c
ahcc\cmpl.s
ahcc\out.c
ahcc\d80tod64.s
; ahccstd\ll.s		; if LONGLONG

; optimizer
ahcc\opt.c			(ahcc\optimize.h,ahcc\po_defs.h,ahcc\opt.h)
ahcc\inst.c			(ahcc\optimize.h,ahcc\po_defs.h,ahcc\opt.h)
ahcc\branch.c		(ahcc\optimize.h,ahcc\po_defs.h,ahcc\opt.h)
ahcc\reg.c			(ahcc\optimize.h,ahcc\po_defs.h,ahcc\opt.h)
ahcc\health.c		(ahcc\optimize.h,ahcc\po_defs.h,ahcc\opt.h)
ahcc\peep0.c		(ahcc\optimize.h,ahcc\po_defs.h,ahcc\opt.h)
ahcc\peep1.c		(ahcc\optimize.h,ahcc\po_defs.h,ahcc\opt.h)
ahcc\peep2.c		(ahcc\optimize.h,ahcc\po_defs.h,ahcc\opt.h)
ahcc\peep3.c		(ahcc\optimize.h,ahcc\po_defs.h,ahcc\opt.h)

; assembler
ahcc\as.c			(ahcc\po.h,ahcc\as.h,ahcc\as_defs.h)	; Motorola assembler          GEN_PO=1 BIP_ASM=1
ahcc\as_parse.c		(ahcc\po.h,ahcc\as.h,ahcc\as_defs.h)	; parse Motorola assembler    GEN_PO=1 BIP_ASM=1
ahcc\as_plib.c		(ahcc\po.h,ahcc\as.h,ahcc\as_defs.h)	; parse routines for as_parse          BIP_ASM=1
ahcc\po.c			(ahcc\po.h,ahcc\as.h,ahcc\as_defs.h)	; Pure C object output        GEN_PO=1
ahcc\as_out.c		(ahcc\po.h,ahcc\as.h,ahcc\as_defs.h)	; assembler output            GEN_PO=1 BIP_ASM=1
ahcc\as_lib.c		(ahcc\po.h,ahcc\as.h,ahcc\as_defs.h)	; common of po.c & as_out.c	  GEN_PO=1
ahcc\plib.c			(ahcc\po.h,ahcc\as_defs.h)				; common of po.c & ld.c

; linker
ahcc\ld.c			(ahcc\po.h,ahcc\as_defs.h)				; linker for Pure C objects
ahcc\ld_ob.c 		(ahcc\po.h,ahcc\as_defs.h)				; any objects
ahcc\list.c													; Generic list routines

ahcc\ctype.c
ahcc\diagpr.c

common\qmem.c			; quick permanent malloc's
common\amem.c			; specials

ahccstdf.lib
ahccgemf.lib
ahcctos.lib

